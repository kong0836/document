(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{436:function(t,e,l){"use strict";l.r(e);var a=l(44),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"编译-nginx-的要求"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#编译-nginx-的要求"}},[t._v("#")]),t._v(" 编译 Nginx 的要求")]),t._v(" "),l("h3",{attrs:{id:"磁盘空间"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#磁盘空间"}},[t._v("#")]),t._v(" 磁盘空间")]),t._v(" "),l("p",[t._v("需要保证有 10MB 以上的剩余磁盘空间。Nginx 安装完毕后会占据 4MB 左右的磁盘空间，实际的磁盘空间需求会因编译设置和是否安装第三方模块而有所不同。")]),t._v(" "),l("h3",{attrs:{id:"gcc-编译器及相关工具"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#gcc-编译器及相关工具"}},[t._v("#")]),t._v(" GCC 编译器及相关工具")]),t._v(" "),l("p",[t._v("他们用于自动创建功能完善的 Makefile，当前大多数软件包都是用这一工具生成 Makefile 的，Nginx 也不例外。在 CentOS 系统下，可以使用 yum 命令安装 GCC 编译器及相关工具。")]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[t._v("yum -y "),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc gcc-c++ autoconf automake\n")])])]),l("h3",{attrs:{id:"模块依赖性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块依赖性"}},[t._v("#")]),t._v(" 模块依赖性")]),t._v(" "),l("p",[t._v("Nginx 的一些模块需要其他第三方库的支持，例如 "),l("code",[t._v("gzip")]),t._v(" 模块需要 "),l("code",[t._v("zlib")]),t._v(" 库，"),l("code",[t._v("rewrite")]),t._v(" 模块需要 "),l("code",[t._v("pcre")]),t._v(" 库，"),l("code",[t._v("ssl")]),t._v(" 功能需要 "),l("code",[t._v("openssl")]),t._v(" 库等。")]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[t._v("yum -y "),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" zlib zlib-devel openssl openssl-devel pcre pcre-devel\n")])])]),l("h2",{attrs:{id:"下载nginx"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#下载nginx"}},[t._v("#")]),t._v(" 下载Nginx")]),t._v(" "),l("ul",[l("li",[t._v("http://nginx.org/en/download.html")]),t._v(" "),l("li",[t._v("链接：https://pan.baidu.com/s/13h8DOcnTbb74FcggwSa9Ig 提取码：33rq")])]),t._v(" "),l("h2",{attrs:{id:"安装nginx"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#安装nginx"}},[t._v("#")]),t._v(" 安装Nginx")]),t._v(" "),l("ul",[l("li",[t._v("在 Windows环境下安装")])]),t._v(" "),l("p",[t._v("解压 nginx 安装包，进入根目录，双击 "),l("code",[t._v("nginx.exe")]),t._v(" 安装程序。如果需要对启动的 Nginx 进程进行控制，可以使用 DOS 命令：")]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[t._v("nginx -s "),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stop "),l("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" quit "),l("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" reopen "),l("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" reload"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),l("ul",[l("li",[t._v("在 Linux 环境下安装")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf nginx-1.21.1.tar.gz -C /usr/local/\n"),l("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/nginx-1.21.1\n./configure\n"),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),l("p",[t._v("configure命令相关参数")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--prefix")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("Nginx 安装路径。默认为 "),l("code",[t._v("/usr/local/nginx")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--sbin-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("Nginx 可执行文件安装路径。只能安装时指定，默认为"),l("code",[t._v("<prefix>/sbin/nginx")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--conf-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在没有给定 -c 选项下默认的 nginx.conf 的路劲。默认为 "),l("code",[t._v("<prefix>/conf/nginx.conf")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--pid-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在 "),l("code",[t._v("nginx.conf")]),t._v(" 中没有指定 pid 指令的情况下，默认的 Nginx.pid 的路径。默认为 "),l("code",[t._v("<prefix>/logs/nginx.pid")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--lock-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[l("code",[t._v("nginx.lock")]),t._v(" 文件的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--error-log-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在 "),l("code",[t._v("nginx.conf")]),t._v(" 中没有指定 "),l("code",[t._v("error_log")]),t._v(" 指令的情况下，默认的错误日志的路劲，如果没有指定，默认为 "),l("code",[t._v("<prefix>/logs/error.log")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--http-log-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在 "),l("code",[t._v("nginx.conf")]),t._v(" 中没有指定 "),l("code",[t._v("access_log")]),t._v(" 指令的情况下，默认的访问日志的路劲，如果没有指定，默认为 "),l("code",[t._v("<prefix>/logs/access.log")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--user")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在 "),l("code",[t._v("nginx.conf")]),t._v(" 中没有指定 "),l("code",[t._v("user")]),t._v(" 指令的情况下，默认的 Nginx 使用的用户。如果没有指定，默认为 "),l("code",[t._v("nobody")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--group")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("在 "),l("code",[t._v("nginx.conf")]),t._v(" 中没有指定 "),l("code",[t._v("user")]),t._v(" 指令的情况下，默认的 Nginx 使用的组。如果没有指定，默认为 "),l("code",[t._v("nobody")])])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--builddir")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定编译的目录")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-rtsig_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 "),l("code",[t._v("rtsig")]),t._v(" 模块")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-select_module（--without-select_module）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("允许或不允许开启 SELECT 模式，如果 configure 没有找到更合适的模式，比如 kqueue（sun os）、epoll （linux kenel 2.6+）、rtsig（实时信号）或 /dev/poll（一种类似 select 的模式，底层实现与 SELECT 基本相同，都是采用轮询方法），SELECT 模式将是默认安装模式")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-poll_module（--without-poll_module）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("允许或不允许开启 POLL 模式，如果没有更合适的模式，比如 kqueue（sun os）、epoll （linux kenel 2.6+），则可以开启")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_ssl_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("开启 HTTP SSL 模块，是 Nginx 可以支持 HTTPS 请求。这个模块需要已经安装 OPENSSL,在 DEBIAN 上是 libssl")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_realip_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_realip_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_addition_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_addition_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_sub_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_sub_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_dav_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_dav_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_flv_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_flv_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_stub_status_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 “service status” 页")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_charset_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_charset_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_gzip_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_gzip_module ，如果启用，需要 zlib")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_ssi_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_ssi_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_userid_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_userid_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_access_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_access_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_auth_basic_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_basic_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_autoindex_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_autoindex_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_geo_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_geo_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_map_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_map_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_refer_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_reference_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_rewrite_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_rewrite_module。如果启用，需要 PCRE")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_proxy_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_proxy_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_fastcgi_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_fastcgi_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_memcached_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_memcached_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_limit_zone_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_limit_zone_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_empty_gif_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_empty_gif_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_browser_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_browser_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http_upstream_ip_hash_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用  ngx_http_upstream_ip_hash_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-http_perl_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_http_perl_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-perl_module_path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 perl 模块的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-perl")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 perl 执行文件的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--http_log-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 http 默认访问日志的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--http_client_body-temp-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 http 客户端请求缓存文件存放目录的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--http_proxy-temp-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 http 反向代理缓存文件存放目录的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--http-fastcgi-temp-path")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 http  FastCGI 缓存文件存放目录的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-http")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁用 HTTP Server")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-mail")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 IMAP4/POP3/SMTP 代理模块")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-mail_ssl_module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用 ngx_mail_ssl_module")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-cc")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 C 编译器的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-cpp")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 C 预处理器的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-cpu-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("为特定的 CPU 编译，有效的值包括：pentium、pentiumpro、pentium3、pentium4、athlon、opteron、amd64、sparc32、sparc64、ppc64")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--without-pcre")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("禁止 PCRE 的使用。同时也会禁止 HTTP rewrite 模块。在 “location” 配置指令中的正则表达式也需要 PCRE")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-pcre")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("指定 PCRE 库的源代码的路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-pcre-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 PCRE 的额外编译选项")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-md5")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 MD5 库的源代码路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-md5-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 MD5 库的额外编译选项")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-md5-asm")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("使用 MD5 汇编源码")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-sha1")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 sha1 库的源代码路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-sha1-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 sha1 库的额外编译选项")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-sha1-asm")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("使用 sha1 汇编语言")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-zlib")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 zlib 库的源代码路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-zlib-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 zlib 库的额外编译选项")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-zlib-asm")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("zlib 针对 CPU 的优化，合法的值是：pentium、pentiumpro")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-openssl")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 OpenSSL 库的源代码路径")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-openssl-opt")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("设置 OPenSSL 库的额外编译选项")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--with-debug")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("启用调试日志")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("--add-module")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个在指定路径中能够找到的第三方模块")])])])]),t._v(" "),l("h2",{attrs:{id:"nginx启动、停止、平滑重启"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#nginx启动、停止、平滑重启"}},[t._v("#")]),t._v(" Nginx启动、停止、平滑重启")]),t._v(" "),l("h3",{attrs:{id:"nginx的信号控制"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#nginx的信号控制"}},[t._v("#")]),t._v(" Nginx的信号控制")]),t._v(" "),l("p",[t._v("Nginx支持一下几种信号：")]),t._v(" "),l("ul",[l("li",[t._v("TERM，INT 快速关闭；")]),t._v(" "),l("li",[t._v("QUIT 从容关闭；")]),t._v(" "),l("li",[t._v("HUP 平滑重启，重新加载配置文件；")]),t._v(" "),l("li",[t._v("USR1 重新打开日志文件，在切割日志时用途较大；")]),t._v(" "),l("li",[t._v("USR2 平滑升级可执行程序；")]),t._v(" "),l("li",[t._v("WINCH 从容关闭工作进程。")])]),t._v(" "),l("h3",{attrs:{id:"启动"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),l("ul",[l("li",[t._v("方式一：")])]),t._v(" "),l("p",[t._v("假如 Nginx 安装在 "),l("code",[t._v("/usr/local/nginx")]),t._v(" 目录中，那么启动 Nginx 的命令就是：")]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[t._v("/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n")])])]),l("p",[t._v("参数 "),l("code",[t._v("-c")]),t._v(" 指定了配置文件的路径，如果不加 "),l("code",[t._v("-c")]),t._v(" 参数，Nginx 会默认加载其安装目录的 conf 子目录中的 "),l("code",[t._v("nginx.conf")]),t._v(" 文件。")]),t._v(" "),l("ul",[l("li",[t._v("方式二：将 nginx 启动命令配置到环境变量 PATH 中")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/profile\n")])])]),l("div",{staticClass:"language-properties extra-class"},[l("pre",{pre:!0,attrs:{class:"language-properties"}},[l("code",[l("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("NGINX_HOME")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/usr/local/nginx")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("PATH")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("${NGINX_HOME}/sbin:${PATH}")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("export")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("NGINX_HOME PATH")]),t._v("\n")])])]),l("div",{staticClass:"language-properties extra-class"},[l("pre",{pre:!0,attrs:{class:"language-properties"}},[l("code",[l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("source")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/etc/profile")]),t._v("\n")])])]),l("h3",{attrs:{id:"停止"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#停止"}},[t._v("#")]),t._v(" 停止")]),t._v(" "),l("ul",[l("li",[t._v("从容停止 Nginx")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -quit Nginx主进程号\n")])])]),l("ul",[l("li",[t._v("快速停止 Nginx")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式一")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -term Nginx主进程号\n"),l("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式二")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -int Nginx主进程号\n")])])]),l("ul",[l("li",[t._v("强制停止所有 Nginx 进程")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token function"}},[t._v("pkill")]),t._v(" -9 nginx\n")])])]),l("h3",{attrs:{id:"平滑重启"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#平滑重启"}},[t._v("#")]),t._v(" 平滑重启")]),t._v(" "),l("ul",[l("li",[t._v("检查配置文件是否正确")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[t._v("/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf\n")])])]),l("p",[t._v("如果配置文件正确，屏幕将提示以下两行信息")]),t._v(" "),l("div",{staticClass:"language-properties extra-class"},[l("pre",{pre:!0,attrs:{class:"language-properties"}},[l("code",[l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("configuration file /usr/local/nginx/conf/nginx.conf test is successful")]),t._v("\n")])])]),l("p",[t._v("如果配置文件不正确，屏幕将提示配置文件的第几行出错")]),t._v(" "),l("div",{staticClass:"language-properties extra-class"},[l("pre",{pre:!0,attrs:{class:"language-properties"}},[l("code",[l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok")]),t._v("\n"),l("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nginx")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),l("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("configuration file /usr/local/nginx/conf/nginx.conf test is successful")]),t._v("\n")])])]),l("ul",[l("li",[t._v("平滑重启 Nginx")])]),t._v(" "),l("div",{staticClass:"language-shell extra-class"},[l("pre",{pre:!0,attrs:{class:"language-shell"}},[l("code",[l("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -hup Nginx主进程号\n")])])]),l("h3",{attrs:{id:"平滑升级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#平滑升级"}},[t._v("#")]),t._v(" 平滑升级")]),t._v(" "),l("p",[t._v("当需要将正在运行中的 "),l("code",[t._v("Nginx")]),t._v(" 升级、添加/删除服务模块时，可以在不中断服务的情况下，使用新版本、重编译的 "),l("code",[t._v("Nginx")]),t._v(" 可执行程序替换旧版本的可执行程序。步骤如下：")]),t._v(" "),l("ol",[l("li",[t._v("将新版本编译安装到旧版本的 "),l("code",[t._v("Nginx")]),t._v(" 安装路径中。替换之前，最好备份一下旧的可执行文件。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);