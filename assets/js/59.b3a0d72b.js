(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{438:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"完整配置示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整配置示例"}},[t._v("#")]),t._v(" 完整配置示例")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用的用户和组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" nobody;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定工作衍生进程数（一般等于CPU的总核数或总核数的两倍，例如两个四核CPU，则总核数为8）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("worker_processes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" 1;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定错误日志存放的路径，错误日志记录级别可选项为：[ debug | info | notice | warn | error | crit ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("error_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" logs/error.log;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定pid存放的路径 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("pid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("       logs/nginx.pid;")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("events")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t# 使用的网络I/O模型，Linux 系统推荐采用 epoll 模型，FreeBSD 系统推荐采用 kqueue 模型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\tuse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("epoll;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t# 允许的连接数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    worker_connections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" 1024;")]),t._v("\n}\n\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("      mime.types;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    default_type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" application/octet-stream;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    # 设置使用的字符集，如果一个网站有多个字符集，请不要随便设置，应让程序员在 HTML 代码中通过 Meta 标签设置")]),t._v("\n    charset\t\t\tgb2132;\n    \n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    server_names_hash_bucket_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("128;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    client_header_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("32k;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    large_client_header_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("4 32k;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    log_format")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("                      '$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('$body_bytes_sent "$http_referer" \'')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v('                      \'"$http_user_agent"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('"$http_x_forwarded_for"\';')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" logs/access.log  main;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    sendfile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("       on;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    tcp_nopush")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("    on;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" 0;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" 65;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    # 开启gzip压缩")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    gzip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" on;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("      80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" localhost;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #charset koi8-r;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" logs/host.access.log  main;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("            root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("  html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("            index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n        }\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        error_page")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" 404              /404.html;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # redirect server error pages to the static page /50x.html")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        error_page")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("  500 502 503 504  /50x.html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/50x.html {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("            root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("  html;")]),t._v("\n        }\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # proxy the PHP scripts to Apache listening on 127.0.0.1:80")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #location ~ \\.php$ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    proxy_pass   http://127.0.0.1;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #location ~ \\.php$ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    root           html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    fastcgi_pass   127.0.0.1:9000;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    fastcgi_index  index.php;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    include        fastcgi_params;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # deny access to .htaccess files, if Apache's document root")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # concurs with nginx's one")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #location ~ /\\.ht {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #    deny  all;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        #}")]),t._v("\n    }\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    # another virtual host using mix of IP-, name-, and port-based configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #server {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    listen       8000;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    listen       somename:8080;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    server_name  somename  alias  another.alias;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    location / {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #        root   html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #        index  index.html index.htm;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    # HTTPS server")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #server {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    listen       443 ssl;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    server_name  localhost;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_certificate      cert.pem;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_certificate_key  cert.key;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_session_cache    shared:SSL:1m;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_session_timeout  5m;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_ciphers  HIGH:!aNULL:!MD5;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    ssl_prefer_server_ciphers  on;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    location / {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #        root   html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #        index  index.html index.htm;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #    }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("    #}")]),t._v("\n}\n")])])]),s("h2",{attrs:{id:"虚拟主机配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟主机配置"}},[t._v("#")]),t._v(" 虚拟主机配置")]),t._v(" "),s("h3",{attrs:{id:"什么是虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是虚拟主机"}},[t._v("#")]),t._v(" 什么是虚拟主机")]),t._v(" "),s("p",[t._v("虚拟主机使用的是特殊的软硬件技术，它把一台运行在因特网上的服务器主机分成一台台“虚拟”的主机，每台虚拟主机都可以是一个独立的网站，可以有具体的域名，具有完整的 Internet 服务器功能（"),s("code",[t._v("WWW")]),t._v("、"),s("code",[t._v("FTP")]),t._v("、"),s("code",[t._v("Email")]),t._v("等），同一台主机上的虚拟主机之间是完全独立的。从网站访问者来看，每一台虚拟主机和一台独立的主机完全一样。")]),t._v(" "),s("p",[t._v("利用虚拟主机，不用为每个要运行的网站提供一台单独的 Nginx 服务器或单独运行一组Nginx进程。虚拟主机提供了在同一台服务器、同一组 "),s("code",[t._v("Nginx")]),t._v(" 进程上运行多个网站的功能。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Nginx")]),t._v(" 配置文件 "),s("code",[t._v("nginx.conf")]),t._v(" 中，一个最简化的虚拟主机配置如下所示：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\tserver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n\t\tlisten\t\t80 default;\n\t\tserver_name\t _ *;\n\t\taccess_log\t logs/default.access.log main;\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\tlocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n\t\t\tindex\tindex.html;\n\t\t\troot\t/usr/local/server1\n\t\t}\n\t}\n}\n")])])]),s("p",[t._v("跟 "),s("code",[t._v("Apache")]),t._v(" 一样，"),s("code",[t._v("Nginx")]),t._v(" 也可以配置多种类型的虚拟主机：一是基于 "),s("code",[t._v("IP")]),t._v(" 的虚拟主机，二是基于域名的虚拟主机。三是基于端口的虚拟主机。")]),t._v(" "),s("h3",{attrs:{id:"配置基于-ip-的虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置基于-ip-的虚拟主机"}},[t._v("#")]),t._v(" 配置基于 IP 的虚拟主机")]),t._v(" "),s("p",[s("code",[t._v("Linux")]),t._v("、"),s("code",[t._v("FreeBSD")]),t._v(" 操作系统都允许添加 IP 别名。IP别名背后的概念很简单：在一块物理网卡上绑定多个 IP 地址。这样就能够在使用单一网卡的同一个服务器上运行多个基于 IP 的虚拟主机。设置 IP 别名也非常容易，只需配置系统上的网络接口，让它监听额外的 IP 地址。在 "),s("code",[t._v("Linux")]),t._v(" 系统上，可以使用标准的网络配置工具（比如 "),s("code",[t._v("ifconfig")]),t._v(" 和 "),s("code",[t._v("route")]),t._v(" 命令）添加IP 别名。")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("eth0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        inet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("172.29.147.144  netmask 255.255.240.0  broadcast 172.29.159.255")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        inet6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("fe80::216:3eff:fe19:865d  prefixlen 64  scopeid 0x20<link>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        ether")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("00:16:3e:19:86:5d  txqueuelen 1000  (Ethernet)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        RX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("packets 6125152  bytes 1576085539 (1.4 GiB)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        RX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("errors 0  dropped 0  overruns 0  frame 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        TX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("packets 4414005  bytes 2425194768 (2.2 GiB)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        TX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("errors 0  dropped 0 overruns 0  carrier 0  collisions 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("flags=73<UP,LOOPBACK,RUNNING>  mtu 65536")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        inet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("127.0.0.1  netmask 255.0.0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        inet6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(":1  prefixlen 128  scopeid 0x10<host>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        loop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" txqueuelen 1000  (Local Loopback)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        RX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("packets 48  bytes 4470 (4.3 KiB)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        RX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("errors 0  dropped 0  overruns 0  frame 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        TX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("packets 48  bytes 4470 (4.3 KiB)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        TX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("errors 0  dropped 0 overruns 0  carrier 0  collisions 0")]),t._v("\n")])])]),s("p",[t._v("如上所示，这台服务器有一块物理网卡设备 "),s("code",[t._v("eth0")]),t._v(" ，和本地回环设备 "),s("code",[t._v("lo")]),t._v(", "),s("code",[t._v("eth0")]),t._v(" 的 "),s("code",[t._v("IP")]),t._v(" 地址为 "),s("code",[t._v("172.29.147.144")]),t._v("，本地回环 "),s("code",[t._v("lo")]),t._v(" 的 IP 地址为 "),s("code",[t._v("127.0.0.1")]),t._v("；")]),t._v(" "),s("p",[t._v("本地回环代表设备的本地虚拟接口，所以默认被看做是永远不会宕机的接口。它的主要作用有两个：一是测试本机的网络配置，能 "),s("code",[t._v("ping")]),t._v(" 通 "),s("code",[t._v("127.0.0.1")]),t._v(" 说明本机的网卡和 IP协议安装都没有问题；另一个作用是某些 "),s("code",[t._v("server/client")]),t._v(" 的应用程序在运行时需调用服务器上的资源，一般要指定 "),s("code",[t._v("server")]),t._v(" 的 IP 地址，但当该程序要在同一台服务器上运行且没有别的 "),s("code",[t._v("server")]),t._v(" 时，就可以把 "),s("code",[t._v("server")]),t._v(" 的资源装在本机上，"),s("code",[t._v("server")]),t._v(" 的 IP 地址设为 "),s("code",[t._v("127.0.0.1")]),t._v(" 也同样可以运行。")]),t._v(" "),s("p",[t._v("如果要在 "),s("code",[t._v("eth0")]),t._v(" 网卡设备上添加一个 "),s("code",[t._v("IP")]),t._v(" 别名 "),s("code",[t._v("172.29.147.145")]),t._v(" ,可以通过一下命令来进行：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" eth0:1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),t._v(".147.145 broadcast "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),t._v(".159.255 netmask "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".240.0 up\n")])])]),s("p",[t._v("但是，通过 "),s("code",[t._v("ifconfig")]),t._v("  和 "),s("code",[t._v("route")]),t._v(" 配置的 "),s("code",[t._v("IP")]),t._v(" 别名在服务器重启后会消失，不过可以将这两条 "),s("code",[t._v("ifconfig")]),t._v("  和 "),s("code",[t._v("route")]),t._v(" 命令添加到 "),s("code",[t._v("/etc/rc.local")]),t._v(" 文件中，让系统开机时自动运行，以下是相关命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/rc.local\n")])])]),s("p",[t._v("在文件末尾增加以下内容，然后保存即可：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" eth0:1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),t._v(".147.145 broadcast "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),t._v(".159.255 netmask "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".240.0 up\n")])])]),s("p",[t._v("下面开始配置基于 "),s("code",[t._v("IP")]),t._v(" 的虚拟主机。无论是通过 "),s("code",[t._v("IP")]),t._v(" 别名在一台服务器上配置多个 "),s("code",[t._v("IP")]),t._v(" 地址，还是通过多块网卡在服务器上配置多个 "),s("code",[t._v("IP")]),t._v(" 地址，在 "),s("code",[t._v("Nginx")]),t._v(" 中都能将其配置成为基于 "),s("code",[t._v("IP")]),t._v(" 的虚拟主机。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Nginx")]),t._v(" 配置文件 （"),s("code",[t._v("nginx.conf")]),t._v("）中，分别对 "),s("code",[t._v("172.29.147.144")]),t._v(" 、"),s("code",[t._v("172.29.147.145")]),t._v(" 配置两个纯静态 "),s("code",[t._v("HTML")]),t._v(" 支持的虚拟主机，具体配置如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\tlisten")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("      80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("172.29.147.144;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    \troot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" /usr/local/server1;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n    }\n}\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\tlisten")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("      80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("  \tserver_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("172.29.147.145;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("  \tlocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\troot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" /usr/local/server2;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("  \t\tindex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n \t}\n}\n")])])]),s("p",[t._v("从上面的配置文件可以看出，一段 "),s("code",[t._v("server{.......}")]),t._v(" 就是一个虚拟主机，如果要配置多个虚拟主机，建立多段 "),s("code",[t._v("server{}")]),t._v(" 配置即可。监听的 "),s("code",[t._v("IP")]),t._v(" 和端口可以不写 "),s("code",[t._v("IP")]),t._v(" 地址，只写端口号，不写端口号即表示监听该服务器上所有 "),s("code",[t._v("IP")]),t._v(" 的该端口号，可通过 "),s("code",[t._v("server_name")]),t._v(" 区分不同的虚拟主机。")]),t._v(" "),s("h3",{attrs:{id:"配置基于域名的虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置基于域名的虚拟主机"}},[t._v("#")]),t._v(" 配置基于域名的虚拟主机")]),t._v(" "),s("p",[t._v("基于域名的虚拟主机是"),s("strong",[t._v("最常见")]),t._v("的一种虚拟主机。只需配置你的 "),s("code",[t._v("DNS")]),t._v(" 服务器，将每个主机名映射到正确的 IP 地址，然后配置 "),s("code",[t._v("Nginx")]),t._v(" 服务器，令其识别不同的主机名就可以了。这种虚拟主机技术，使很多虚拟主机可以共享同一个 "),s("code",[t._v("IP")]),t._v(" 地址，有效解决了 "),s("code",[t._v("IP")]),t._v(" 地址不足的问题。"),s("strong",[t._v("所以，如果没有特殊要求使你必须用一个基于 "),s("code",[t._v("IP")]),t._v(" 的虚拟主机，最好还是使用基于域名的虚拟主机。")])]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\tserver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 监听的端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("     80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 主机名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("aaa.domain.com;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 访问日志文件存放路径")]),t._v("\n        access_log\tlogs/aaa.domain.com.access.log main;\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# 默认首页文件，顺序从左到右，如果找不到 index.html 文件，则查找 index.htm 文件作为首页文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\tindex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# HTML 网页文件存放的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\troot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" /usr/local/aaa;")]),t._v("\n        }\n\t}\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("    server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 监听的端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("     80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 主机名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("bbb.otherdomain.com;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 访问日志文件存放路径")]),t._v("\n        access_log\tlogs/bbb.otherdomain.com.access.log main;\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# 默认首页文件，顺序从左到右，如果找不到 index.html 文件，则查找 index.htm 文件作为首页文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\tindex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# HTML 网页文件存放的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\troot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" /usr/local/bbb;")]),t._v("\n        }\n\t}\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\tserver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 监听的端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("     80;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 主机名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("www.domain.com domain.com *.domain.com;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("        # 访问日志文件存放路径")]),t._v("\n        access_log\tlogs/ccc.domain.com.access.log main;\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("        location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# 默认首页文件，顺序从左到右，如果找不到 index.html 文件，则查找 index.htm 文件作为首页文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\tindex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" index.html index.htm;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\t\t\t# HTML 网页文件存放的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\t\t\troot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" /usr/local/ccc;")]),t._v("\n        }\n\t}\n}\n")])])]),s("p",[t._v("在上述示例中，配置了三个虚拟主机，第一个虚拟主机表示所有对域名 "),s("code",[t._v("aaa.domain.com")]),t._v(" 的访问都由它来处理，第二个虚拟主机表示所有对域名 "),s("code",[t._v("bbb.otherdomain.com")]),t._v(" 的访问都由它来处理，第三个虚拟主机表示对域名 "),s("code",[t._v("www.domain.com")]),t._v(" 、"),s("code",[t._v("domain.com")]),t._v(" ，以及除了 "),s("code",[t._v("aaa.domain.com")]),t._v("  之外的所有 "),s("code",[t._v("*.domain.com")]),t._v(" 二级域名的访问都由它来处理。每个虚拟主机的网页文件分别存放在了不同的目录中，每个虚拟主机使用了不同的日志文件来记录访问日志。")]),t._v(" "),s("h2",{attrs:{id:"日志文件配置与切割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志文件配置与切割"}},[t._v("#")]),t._v(" 日志文件配置与切割")]),t._v(" "),s("h3",{attrs:{id:"日志格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志格式"}},[t._v("#")]),t._v(" 日志格式")]),t._v(" "),s("p",[s("code",[t._v("Nginx")]),t._v(" 使用 "),s("code",[t._v("log_format")]),t._v(" 指令来设置日志的记录格式，它的语法如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("log_format")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("name format [format ...]")]),t._v("\n")])])]),s("p",[t._v("各参数解释如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("name")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("定义的格式名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("format")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("定义的格式样式")])])])]),t._v(" "),s("p",[s("code",[t._v("log_format")]),t._v(" 有一个默认的、无需设置的 "),s("code",[t._v("main")]),t._v(" 日志格式设置，相当于 "),s("code",[t._v("Apache")]),t._v(" 的 "),s("code",[t._v("combined")]),t._v(" 日志格式，其具体参数如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("log_format")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("                  '$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('$body_bytes_sent "$http_referer" \'')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v('                  \'"$http_user_agent"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('"$http_x_forwarded_for"\';')]),t._v("\n")])])]),s("p",[t._v("各参数解释如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("remote_addr")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("反向代理服务器的IP地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("remote_user")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("远程客户端用户名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("time_local")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("访问时间与时区")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("request")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求URL与 HTTP 协议")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("status")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求状态")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("body_bytes_sent")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("发送给客户端的文件主体内容大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("http_referer")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("记录从哪个页面访问过来的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("http_user_agent")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("记录客户端浏览器的相关信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("http_x_forwarded_for")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户真实IP地址")])])])]),t._v(" "),s("p",[t._v("也可以自定义一份日志的记录格式，不过要注意，"),s("code",[t._v("log_format")]),t._v(" 指令设置的 "),s("code",[t._v("name")]),t._v(" 名称在 "),s("code",[t._v("Nginx")]),t._v(" 配置文件中是不能重复的。")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("172.29.147.144")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('- - [27/Aug/2021:17:15:19 +0800] "GET / HTTP/1.1" 200 163 "-" "curl/7.61.1" "-"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("172.29.147.144")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('- - [27/Aug/2021:17:15:22 +0800] "GET / HTTP/1.1" 200 163 "-" "curl/7.61.1" "-"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("172.29.147.144")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('- - [27/Aug/2021:17:15:23 +0800] "GET / HTTP/1.1" 200 163 "-" "curl/7.61.1" "-"')]),t._v("\n")])])]),s("h3",{attrs:{id:"日志文件存放路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志文件存放路径"}},[t._v("#")]),t._v(" 日志文件存放路径")]),t._v(" "),s("p",[s("code",[t._v("Nginx")]),t._v(" 使用 "),s("code",[t._v("access_log")]),t._v(" 指令来指定日志文件存放路径。该指令语法如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[t._v("access_log\tpath\t[format\t[buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("size | off]]\n")])])]),s("p",[t._v("其中 "),s("code",[t._v("path")]),t._v(" 表示日志文件的存放路径，"),s("code",[t._v("format")]),t._v(" 表示使用 "),s("code",[t._v("log_format")]),t._v(" 指令设置的日志格式的名称，"),s("code",[t._v("buffer=size")]),t._v("  表示设置内存缓冲区的大小，例如可以设置 "),s("code",[t._v("buffer=32k")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"不记录日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不记录日志"}},[t._v("#")]),t._v(" 不记录日志")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# off 表示关闭日志记录")]),t._v("\naccess_log\toff;\n")])])]),s("h5",{attrs:{id:"使用默认的-main-格式记录日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用默认的-main-格式记录日志"}},[t._v("#")]),t._v(" 使用默认的 "),s("code",[t._v("main")]),t._v(" 格式记录日志")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# main 可不写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/logs/access.log main;")]),t._v("\n")])])]),s("h5",{attrs:{id:"使用自定义格式的日志记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用自定义格式的日志记录"}},[t._v("#")]),t._v(" 使用自定义格式的日志记录")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("log_format")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v(" main1  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("                  '$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('$body_bytes_sent "$http_referer" \'')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v('                  \'"$http_user_agent"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v('"$http_x_forwarded_for"\';')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/logs/access.log main1 buffer=32k;")]),t._v("\n")])])]),s("h5",{attrs:{id:"nginx-0-7-4-之后的版本中-access-log-指令中的日志文件路径可以包含变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-0-7-4-之后的版本中-access-log-指令中的日志文件路径可以包含变量"}},[t._v("#")]),t._v(" "),s("code",[t._v("Nginx 0.7.4")]),t._v(" 之后的版本中，"),s("code",[t._v("access_log")]),t._v(" 指令中的日志文件路径可以包含变量")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name 为变量名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/logs/$server_name.log main;")]),t._v("\n")])])]),s("p",[t._v("如果日志文件路径中含有变量，将存在一下一些限制：")]),t._v(" "),s("ul",[s("li",[t._v("Nginx 进程设置的用户和组必须有对该路径创建文件的权限。")])]),t._v(" "),s("p",[t._v("假设 "),s("code",[t._v("Nginx")]),t._v(" 的 "),s("code",[t._v("user")]),t._v(" 指令设置的用户名和用户组都是 "),s("code",[t._v("www")]),t._v("，而 "),s("code",[t._v("/data/logs/")]),t._v(" 目录的用户名和用户组为 "),s("code",[t._v("root")]),t._v("，日志文件将无法被 "),s("code",[t._v("Nginx")]),t._v(" 创建。")]),t._v(" "),s("ul",[s("li",[t._v("缓冲区将不会被使用")]),t._v(" "),s("li",[t._v("对于每一条日志记录，日志文件都将先打开文件，再写入日志记录，然后马上关闭。")])]),t._v(" "),s("p",[t._v("为了提高包含变量的日志文件存放路径的性能，需要使用 "),s("code",[t._v("open_log_file_cache")]),t._v(" 指令设置经常被使用的日志文件描述符缓存。它的语法如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("open_log_file_cache")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("max=N [inactive=time] [min_uses=N] [valid=time] | off")]),t._v("\n")])])]),s("p",[t._v("该指令默认是禁止的，等同于：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("open_log_file_cache")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("off;")]),t._v("\n")])])]),s("p",[s("code",[t._v("open_log_file_cache")]),t._v(" 指令的各项参数说明如下：")]),t._v(" "),s("p",[s("code",[t._v("max")]),t._v(" ：设置缓存中的最大文件描述符数量。如果超过设置的最大文件描述符数量，则采用 LRU（Least Recently Used）算法清除 “较布行使用的文件描述符” 。 LRU（Least Recently Used）算法的基本概念是：当内存缓冲区剩余的可用空间不足时，缓冲区尽可能先保留使用者最常使用的数据，将最近未使用的数据移出内存，腾出空间来加载另外的数据。")]),t._v(" "),s("p",[s("code",[t._v("inactive")]),t._v(" ：设置一个时间，如果在设置的时间内没有使用此文件描述符，则自动删除此描述符。此参数为可选参数，默认时间为 10 秒钟。")]),t._v(" "),s("p",[s("code",[t._v("min_uses")]),t._v(" ：在参数 inactive 指定的时间范围内，如果日志文件超过被使用的次数，则将该日志文件的描述符记入缓存。默认次数为1。")]),t._v(" "),s("p",[s("code",[t._v("valid")]),t._v(" ：设置多长时间检查一次，看一看变量指定的日志文件路径与文件名是否仍然存在。默认时间为 60 秒。")]),t._v(" "),s("p",[s("code",[t._v("off")]),t._v(" ：禁止使用缓存。")]),t._v(" "),s("p",[s("code",[t._v("open_log_file_cache")]),t._v(" 指令的设置示例如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("open_log_file_cache")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("max=1000 inactive=20s min_uses=2 valid=1m;")]),t._v("\n")])])]),s("h2",{attrs:{id:"日志文件切割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志文件切割"}},[t._v("#")]),t._v(" 日志文件切割")]),t._v(" "),s("p",[t._v("生产环境中的服务器，由于访问日志文件增长速度非常快，日志太大会严重影响服务器效率。同时，为了方便对日志进行分析计算，需要对日志文件进行定时切割。定时切割的方式有按月切割、按天切割、按小时切割等。最常用的是按天切割。")]),t._v(" "),s("p",[t._v("Nginx可以采用一下方式来实现日志切割：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" /data1/logs/access.log /data1/logs/20210101.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -usr1 Nginx主进程号\n或者\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -usr1 "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /usr/local/nginx/logs/nginx.pid"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),s("p",[t._v("首先通过 mv 命令将日志文件重命名为 "),s("code",[t._v("/data1/logs/20210101.log")]),t._v(" ，然后发送 kill -usr1 信号给 Nginx的主进程号，让 Nginx 重新生成一个新的日志文件 "),s("code",[t._v("/data1/logs/access.log")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[t._v("每天定时切割日志")])]),t._v(" "),s("p",[t._v("如果想每天定时切割日志，还需要借助 crontab。我们可以写一个按天切割的日志，按年、月份目录存放日志的 shell 脚本：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /usr/local/nginx/cut_nginx_log.sh\n")])])]),s("p",[t._v("shell 脚本内容如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个脚本需在每天的 00:00 运行")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 日志文件的存放路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logs_path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("'/data1/logs'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("-p ${logs_path}${date -d 'yesterday' +'%Y'}/${date -d 'yesterday' +'%m'} /")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("${logs_path}access.log ${logs_path}${date -d 'yesterday' +'%Y'}/${date -d 'yesterday' +'%m'}/access_${date -d 'yesterday' + '%Y%m%d'}.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("kill")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("-usr1 `cat /usr/local/nginx/logs/nginx.pid`")]),t._v("\n")])])]),s("p",[t._v("配置 crontab 每天凌晨 00:00 定时执行这个脚本：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("crontab")]),t._v(" -e\n")])])]),s("p",[t._v("输入一下内容并保存：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("00 * * * /bin/bash /usr/local/nginx/cut_nginx_log.sh")]),t._v("\n")])])]),s("p",[t._v("这个 shell 脚本和 crontab 配置主要实现的功能为：假设今天的日期为 2009 年 5 月 19 日，Nginx当前的日志文件为  "),s("code",[t._v("/data1/logs/access.log")]),t._v(" ，2009 年 5 月 20 日 00：00 会执行 "),s("code",[t._v("cur_nginx_log.sh")]),t._v(" 脚本，"),s("code",[t._v("cur_nginx_log.sh")]),t._v(" 脚本首先创建一个目录为 "),s("code",[t._v("/data1/logs/2009/05/")]),t._v("，然后将 "),s("code",[t._v("/data1/logs/access.log")]),t._v(" 文件移动并重命名为 "),s("code",[t._v("/data1/logs/2009/05/access_20090519.log")]),t._v("，再发送 kill -usr1 信号给 Nginx 主进程，告诉 Nginx 重新生成一个 "),s("code",[t._v("/data1/logs/access.log")]),t._v(" 文件，2009 年 5 月 20 日的日志记录在这个新生成的日志文件中。而  "),s("code",[t._v("/data1/logs/2009/05/access_20090519.log")]),t._v(" 文件，就是  2009 年 5 月 19 日的日志文件。")]),t._v(" "),s("h2",{attrs:{id:"压缩输出配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩输出配置"}},[t._v("#")]),t._v(" 压缩输出配置")]),t._v(" "),s("p",[t._v("gzip（GNU-ZIP）是一种压缩技术。经过 gzip 压缩后页面大小可以变为原来的 30% 甚至更小。这样，用户在浏览页面的时候速度会快很多。gzip的压缩页面需要浏览器和服务器双方都支持，实际上就是服务端压缩，传到浏览器后浏览器解压并解析。浏览器哪里不需要我们担心，因为 IE、Firefox、Opera、谷歌Chrome等绝大多数浏览器都支持解析 gzip 过的页面。")]),t._v(" "),s("p",[t._v("Nginx 的压缩输出由一组 gzip 压缩指令来实现。gzip 压缩输出的相关指令位于 "),s("code",[t._v("http{......}")]),t._v(" 两个大括号之间：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("gzip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("on;")]),t._v("\ngzip_min_length\t1k;\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("gzip_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("\t\t4 16k;")]),t._v("\ngzip_http_version\t1.1;\ngzip_comp_level\t2;\ngzip_types\ttext/plain\tapplication/x-javascript\ttext/css\tapplication/xml;\ngzip_vary\ton;\n")])])]),s("h2",{attrs:{id:"自动列目录配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动列目录配置"}},[t._v("#")]),t._v(" 自动列目录配置")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/ {")]),t._v("\n\tautoindex\ton;\n}\n")])])]),s("p",[t._v("相关命令：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设定索引时文件大小的单位（B、KB、MB 或 GB）")]),t._v("\nautoindex_exact_size\t[ on | off ]\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启以本地时间来显示文件时间的功能。默认为关（GMT时间）")]),t._v("\nautoindex_location\t[ on | off ]\n")])])]),s("h2",{attrs:{id:"浏览器本地缓存设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器本地缓存设置"}},[t._v("#")]),t._v(" 浏览器本地缓存设置")]),t._v(" "),s("p",[t._v("浏览器缓存是为了加速浏览，浏览器在用户磁盘上对最近请求过的文档进行存储，当访问者再次请求这个页面时，浏览器旧可以从本地磁盘显示文档，这样就可以加速页面的浏览。缓存的方式节约了网络的资源，提高了网络的效率。")]),t._v(" "),s("p",[t._v("浏览器缓存可以通过 expires 指令输出 Header 头来实现，指令语法如下：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[t._v("expires\t[time | epoch | max | off]\n")])])]),s("p",[t._v("本指令默认值为 "),s("code",[t._v("expires off")]),t._v("，作用域为 "),s("code",[t._v("http")]),t._v("、"),s("code",[t._v("server")]),t._v("、"),s("code",[t._v("location")]),t._v("。使用本指令可以控制 HTTP 应答中的 Expires  和 Cache-Control 的 Header 头信息（起到控制页面缓存的作用）。各参数含义如下：")]),t._v(" "),s("ul",[s("li",[t._v("time")])]),t._v(" "),s("p",[t._v("可以使用正数或负数。Expires 头标的值将通过当前系统时间加上设定的 time 值来获得。")]),t._v(" "),s("ul",[s("li",[t._v("epoch")])]),t._v(" "),s("p",[t._v("指定 Expires 的值为 1 January,1970,00:00:01 GMT。")]),t._v(" "),s("ul",[s("li",[t._v("max")])]),t._v(" "),s("p",[t._v("指定 Expires 的值为 31 December 2037 23:59:59 GMT，Cache-Control 的值为 10 年。-1 指定 Expires 的值为服务器当前时间 -1s，即永不过期。")]),t._v(" "),s("p",[t._v("Cache-Control 头标的值由指定的时间来决定。")]),t._v(" "),s("p",[t._v("负数："),s("code",[t._v("Cache-Control：no-chche")]),t._v("。")]),t._v(" "),s("p",[t._v("正数或零："),s("code",[t._v("Cache-Control：max-age=#,#")]),t._v(" 为指定时间的秒数。")]),t._v(" "),s("ul",[s("li",[t._v("off")])]),t._v(" "),s("p",[t._v("不修改 Expires 和 Cache-Control 的值。")]),t._v(" "),s("p",[t._v("例：对常见格式的图片、Flash文件在浏览器本地缓存 30 天，对 js 、css 文件在浏览器本地缓存 1 小时，代码如下所示：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("~ .*\\.(gif|jpg|jpeg|png|bmp|swf){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\texpires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("30d;")]),t._v("\n}\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("~ .*\\.(js|css){")]),t._v("\n\texpires\t1h;\n}\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);